@model IEnumerable<MNF4.ViewModels.ContactListViewModel>
           
@ViewData["Count"] Contact(s) meet search criteria

<div id="OldCode">
@*<table>
    <tr>
        <th>
            Name
        </th>
        <th>
            Phone
        </th>
        <th>
            Email Address
        </th>
        <th>
            Source
        </th>
        <th>
            Submit Date
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.ActionLink(item.contact.FirstName + " " + item.contact.LastName, "Details", "Contact", new { id = item.contact.ID }, null)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.contact.Phone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.contact.EmailAddress)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.source.Name) 
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.contact.SubmitDate)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.contact.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.contact.ID })
        </td>
    </tr>
}
</table>*@
</div>

@{ 
    var grid = new WebGrid(Model, canPage: true, ajaxUpdateContainerId: "grid");
    grid.Pager(WebGridPagerModes.All);
   
    @grid.GetHtml(htmlAttributes: new { id = "grid" }, alternatingRowStyle: "altGridRow",
        columns: grid.Columns(
        grid.Column(header: "Contact Name", columnName: "Contact.Name",
            format: (item) => @Html.ActionLink((string)item.contact.FirstName + " " + (string)item.contact.LastName, "Details", "Contact", new { id = item.contact.ID }, null), canSort: false),
        grid.Column("Phone", "Phone", format: (item) => item.contact.Phone, canSort: false),
        grid.Column("EmailAddress", "Email Address", format: (item) => item.contact.EmailAddress, canSort: false),
        grid.Column("Source", "Source", format: (item) => item.source.Name, canSort: false),
        grid.Column("SubmitDate", "Submit Date", format: (item) => item.contact.SubmitDate, canSort: false)
            ));
}